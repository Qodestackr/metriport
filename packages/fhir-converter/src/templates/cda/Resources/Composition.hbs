{{!--
  // -------------------------------------------------------------------------------------------------
  // Copyright (c) 2022-present Metriport Inc.
  //
  // Licensed under AGPLv3. See LICENSE in the repo root for license information.
  //  
  // This file incorporates work covered by the following copyright and  
  // permission notice:  
  //  
  //     Copyright (c) Microsoft Corporation. All rights reserved. 
  //  
  //     Permission to use, copy, modify, and/or distribute this software  
  //     for any purpose with or without fee is hereby granted, provided  
  //     that the above copyright notice and this permission notice appear  
  //     in all copies.  
  //  
  //     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL  
  //     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED  
  //     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE  
  //     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR  
  //     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS  
  //     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  
  //     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN  
  //     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  
  // -------------------------------------------------------------------------------------------------
--}}
{
    "fullUrl":"urn:uuid:{{ID}}",
    "resource":{
        "resourceType": "Composition",
        "id":"{{ID}}",
        "identifier":
  		{
  			"use":"official",
            {{! Missing use mapping }}
			"value":"{{composition.id.root}}",
        },
		"status":"final",
        {{! Missing status mapping }}
        {{#with (elementAt (toArray composition.code) 0)}}
            "type":{{>DataType/CodeableConcept.hbs code=this}},
        {{/with}}
        "date":"{{formatAsDateTime composition.effectiveTime.value}}",
        "title":"{{composition.title._}}",
        "confidentiality":"{{composition.confidentialityCode.code}}",
        "attester": 
        [
        	{
                {{#if composition.legalAuthenticator}}            
        		    "mode": "legal",                
            	    "time":"{{formatAsDateTime composition.legalAuthenticator.time.value}}",
                    {{#if composition.legalAuthenticator.assignedEntity}}
                        {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=composition.legalAuthenticator.assignedEntity) as |practitionerId|}}
                            "party":
                            {
                                "reference":"{{concat 'Practitioner/' practitionerId.Id}}",
                            },
                        {{/with}}
                    {{/if}}
                {{/if}}
			},
        ],
        "event":
        [
           	{
                "period": {{>DataType/Period.hbs period=composition.documentationOf.serviceEvent.effectiveTime}}
           	},
        ],
		"section": 
        [               
            {{#each (toArray composition.component.structuredBody.component)}}
               	{
                    {{#if this.section.title._}}
                	    "title":"{{this.section.title._}}",
                   	    "text":
                        {
                            "status":"generated",
                            "div":"<div xmlns=\"http://www.w3.org/1999/xhtml\">{{this.section.title._}}</div>",
                        }
                    {{else if this.section.code.displayName}}
                        "title":"{{this.section.code.displayName}}",
                        "text":
                        {
                            "status":"generated",
                            "div":"<div xmlns=\"http://www.w3.org/1999/xhtml\">{{this.section.code.displayName}}</div>",
                        }
                    {{else}}
                    "text": {
                        "status": "generated",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">unknown</div>"
                    }
                    {{/if}}
                    "code":{{>DataType/CodeableConcept.hbs code=this.section.code}},
                    "mode":"snapshot",
                    "entry":
                    [
                        {{#with (evaluate 'Utils/ResourceTypeFromSection.hbs' section=this.section) as |resObj|}}
                            {{#if (and (eq resObj.resourceType 'Observation') (contains (toJsonString ../this.section.templateId) '2.16.840.1.113883.10.20.22.2.4.1'))}}
                                {{#each (toArray ../this.section.entry)}}
                                    {{#each (toArray this.organizer.component)}}                           	
                                        {
                                            "reference":"{{concat resObj.resourceType '/' (generateUUID (toJsonString this))}}",
                                            {{>Utils/DisplayFromSectionEntry.hbs section=../../../this.section entry=this}},
                                        },
                                    {{/each}}
                                {{/each}}
                            {{else if resObj.resourceType}}
                                {{#each (toArray ../this.section.entry)}}                           	
                                    {
                                        "reference":"{{concat resObj.resourceType '/' (generateUUID (toJsonString this))}}",
                                        {{>Utils/DisplayFromSectionEntry.hbs section=../../this.section entry=this}}
                                    },
                                {{/each}}
                            {{/if}}
                        {{/with}}
                    ],
                },
            {{/each}}
        ],
    },
    "request":{
        "method":"PUT",
        "url":"Composition/{{ID}}",
    },
},

