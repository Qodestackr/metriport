{{!-- 
  // ------------------------------------------------------------------------------------------------- 
  // Copyright (c) 2022-present Metriport Inc.   
  //  
  // Licensed under AGPLv3. See LICENSE in the repo root for license information.
  //  
  // This file incorporates work covered by the following copyright and  
  // permission notice:  
  //  
  //     Copyright (c) Microsoft Corporation. All rights reserved. 
  //  
  //     Permission to use, copy, modify, and/or distribute this software  
  //     for any purpose with or without fee is hereby granted, provided  
  //     that the above copyright notice and this permission notice appear  
  //     in all copies.  
  //  
  //     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL  
  //     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED  
  //     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE  
  //     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR  
  //     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS  
  //     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  
  //     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN  
  //     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  
  // -------------------------------------------------------------------------------------------------
--}}
{{#if (contains (toString (toJsonString msg)) '1.3.6.1.4.1.19376.1.5.3.1.3.4')}}
    {{#with (getFirstCdaSectionsByTemplateId msg '1.3.6.1.4.1.19376.1.5.3.1.3.4')}}
            {{#each (toArray 1_3_6_1_4_1_19376_1_5_3_1_3_4.entry) as |note|}}
                {{>Resources/DiagnosticReport.hbs diagReport=note.act ID=(generateUUID (toJsonString note.act))}},
                {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
                	{{>References/DiagnosticReport/subject.hbs ID=(generateUUID (toJsonString note.act)) REF=(concat 'Patient/' patientId.Id)}},
                {{/with}}

                {{!-- TODO need to add references, author, etc --}}
                {{#if @encompassingEncounterIds}} 
                    {{>References/DiagnosticReport/encounter.hbs ID=(generateUUID (toJsonString note.act)) REF=(concat 'Encounter/' @encompassingEncounterIds.newId)}}
                {{/if}}

                {{#if note.act.author.assignedAuthor}}
                    {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=note.act.author.assignedAuthor) as |practitionerId|}}
                        {{>Resources/Practitioner.hbs practitioner=note.act.author.assignedAuthor ID=practitionerId.Id}},
                        {{>References/DiagnosticReport/performer.hbs ID=(generateUUID (toJsonString note.act)) REF=(concat 'Practitioner/' practitionerId.Id)}},
                    {{/with}}
                {{/if}}
                {{#if note.act.author.assignedAuthor.representedOrganization}}
                    {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=note.act.author.assignedAuthor.representedOrganization) as |orgId|}}
                        {{>Resources/Organization.hbs org=note.act.author.assignedAuthor.representedOrganization ID=orgId.Id}},
                        {{>References/DiagnosticReport/performer.hbs ID=(generateUUID (toJsonString note.act)) REF=(concat 'Organization/' orgId.Id)}},
                    {{/with}}
                {{/if}}   
            {{/each}}
        {{/with}}
{{/if}}